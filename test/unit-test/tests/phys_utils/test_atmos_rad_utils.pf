@test
subroutine wavenumber_is_visible()
    use funit
    use atmos_phys_rad_utils, only : is_visible
    use ccpp_kinds,           only : kind_phys

    real(kind_phys), parameter  :: test_wavenumber = 15555._kind_phys
    logical                     :: output_logical

    output_logical = is_visible(test_wavenumber)

    @assertEqual(.true., output_logical)
end subroutine wavenumber_is_visible

@test
subroutine wavenumber_is_not_visible()
    use funit
    use atmos_phys_rad_utils, only : is_visible
    use ccpp_kinds,           only : kind_phys

    real(kind_phys), parameter  :: test_wavenumber = 823._kind_phys
    logical                     :: output_logical

    output_logical = is_visible(test_wavenumber)

    @assertEqual(.false., output_logical)
end subroutine wavenumber_is_not_visible

@test
subroutine wavenumber_is_on_the_cusp()
    use funit
    use atmos_phys_rad_utils, only : is_visible
    use ccpp_kinds,           only : kind_phys

    real(kind_phys), parameter  :: test_wavenumber = 14286._kind_phys
    logical                     :: output_logical

    output_logical = is_visible(test_wavenumber)

    @assertEqual(.false., output_logical)
end subroutine wavenumber_is_on_the_cusp
